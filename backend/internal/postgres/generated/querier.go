// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package generated

import (
	"context"
)

type Querier interface {
	CreateCategory(ctx context.Context, arg CreateCategoryParams) (Category, error)
	CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error)
	CreatePayment(ctx context.Context, arg CreatePaymentParams) (Payment, error)
	CreateProduct(ctx context.Context, arg CreateProductParams) (Product, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteCategory(ctx context.Context, id int64) error
	DeleteOrder(ctx context.Context, id int64) error
	DeleteProduct(ctx context.Context, id int64) error
	GetCategory(ctx context.Context, id int64) (Category, error)
	GetOrderByID(ctx context.Context, id int64) (Order, error)
	GetPayment(ctx context.Context, arg GetPaymentParams) (GetPaymentRow, error)
	GetPaymentsOverviewByOrderID(ctx context.Context, orderID int64) ([]Payment, error)
	GetProductByID(ctx context.Context, id int64) (Product, error)
	GetUser(ctx context.Context, arg GetUserParams) (GetUserRow, error)
	GetUserInternal(ctx context.Context, arg GetUserInternalParams) (User, error)
	ListCategories(ctx context.Context) ([]Category, error)
	ListOrderItems(ctx context.Context, orderID int64) ([]OrderItem, error)
	ListOrders(ctx context.Context, arg ListOrdersParams) ([]Order, error)
	ListOrdersCount(ctx context.Context, arg ListOrdersCountParams) (int64, error)
	// -- name: GetPaymentByOrderID :one
	// SELECT
	//     p.*,
	//     o.id as "order.id",
	//     o.user_name as "order.user_name",
	//     o.user_phone_number as "order.user_phone_number",
	//     o.total_amount as "order.total_amount",
	//     o.status as "order.status",
	//     o.shipping_address as "order.shipping_address",
	//     o.payment_status as "order.payment_status",
	//     o.created_at as "order.created_at"
	// FROM payments p
	// JOIN orders o ON o.id = p.order_id
	// WHERE p.order_id = $1;
	ListPayments(ctx context.Context, arg ListPaymentsParams) ([]Payment, error)
	ListPaymentsCount(ctx context.Context, arg ListPaymentsCountParams) (int64, error)
	ListProducts(ctx context.Context, arg ListProductsParams) ([]Product, error)
	ListProductsCount(ctx context.Context, arg ListProductsCountParams) (int64, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]ListUsersRow, error)
	ListUsersCount(ctx context.Context, arg ListUsersCountParams) (int64, error)
	UpdateCategory(ctx context.Context, arg UpdateCategoryParams) (Category, error)
	UpdateOrder(ctx context.Context, arg UpdateOrderParams) (Order, error)
	UpdatePayment(ctx context.Context, arg UpdatePaymentParams) (Payment, error)
	UpdateProduct(ctx context.Context, arg UpdateProductParams) (Product, error)
	UpdateProductCategory(ctx context.Context, arg UpdateProductCategoryParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
